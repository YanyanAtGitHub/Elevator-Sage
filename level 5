{
    init: function(elevators, floors) {
        
        function abs(a){
            if(a < 0){
                return -a                
            }
            else{
                return a
            }
            
        }
        
        function getup(){
            var upArray = new Array()

            for(var i = 0; i < floors.length - 1; i++){
                if(floors[i].on("up_button_pressed").buttonStates.up == "activated"){
                    upArray.push(i)
                }     
            }
            return upArray
        }

        function getdown(){
            var downArray = new Array()

            for(var i = 1; i < floors.length; i++){
                if(floors[i].on("down_button_pressed").buttonStates.down == "activated"){
                    downArray.push(i)
                }
            }
         
            return downArray
        }
        
        function pressedarray(elevator){
            var returnarray = new Array()
            return returnarray.concat(elevator.getPressedFloors())
        }
        
        function decidedirection(elevator, maxfactor){
            if(elevator.currentFloor() == 0){
                return "up"
            }
            else{
                if(elevator.currentFloor() == floors.length -1){
                    return "down"
                }
                else{
                    var weightup = 0
                    var weightdown = 0
                    var totalarray = new Array()
                    if(maxfactor < 0.7){
                        totalarray = totalarray.concat(pressedarray(elevator), getup(), getdown())                        
                    }
                    else{
                        totalarray = pressedarray(elevator)
                    }

                   // console.log("total array is" + totalarray)

                    for(var i in totalarray){
                       // console.log("currentfloor is" + elevator.currentFloor())
                       // console.log("i is" + totalarray[i])
                        if(totalarray[i] > elevator.currentFloor()){
                         //   console.log("weightup has been triggered")
                            weightup = weightup + 1
                        }
                        else{
                         //   console.log("weightdown has been triggered")
                            weightdown = weightdown +1
                        }             
                    }

                    totalarray = totalarray.sort()
                    //console.log("updated totalarry is " + totalarray)

                   // console.log("weightup is " + weightup)
                   // console.log("weightdown is " + weightdown)

                    if(weightup > weightdown){
                       // console.log("return weightup")
                        return "up"

                    }
                    else{
                        //console.log("return weightup")
                        return "down"
                    }
                    
                }
            }
           

        }
        
        function decidefloor(direction, elevator, maxfactor){
            if(direction == "up"){
               // console.log("direction = up")
                var newuparray = new Array()
                //console.log("pressed array is " + pressedarray(elevator))
               // console.log("getup array is " + getup())
                
                if(maxfactor < 0.7){
                    console.log("prssedarray is " + (pressedarray(elevator)))
                    console.log("getup is "+ getup())
                    newuparray = newuparray.concat(pressedarray(elevator), getup()).sort()                    
                }
                else{
                    newuparray = pressedarray(elevator).sort()                    
                }

                //console.log("sorted array is " + newuparray)
                for(var i in newuparray){
                   // console.log("i = " + newuparray[i])
                   // console.log("curretfloor is " + elevator.currentFloor())
                    if(newuparray[i] > elevator.currentFloor()){
                       // console.log("return floor is" + newuparray[i])
                        return newuparray[i]
                    }
                    else{
                        continue;
                    }                    
                }
                return floors.length- 1
            }
            else{
                //console.log("direction = down")
                //console.log("pressed array is " + pressedarray(elevator))
                //console.log("getdown array is " + getdown())
                var newdownarray = new Array()
                
                if(maxfactor < 0.7){
                    newdownarray = newdownarray.concat(pressedarray(elevator), getdown()).sort().reverse();                    
                }
                else{
                    newdownarray = pressedarray(elevator).sort().reverse();                   
                }
                
                //console.log("newdownarry is " + newdownarray)
                for(var i in newdownarray){
                    //console.log("curretfloor is " + elevator.currentFloor())
                    //console.log("i is " + newdownarray[i])
                    if(newdownarray[i] < elevator.currentFloor()){
                        //console.log("return" + newdownarray[i])
                        return newdownarray[i]
                    }
                    else{
                        continue;
                    }                    
                }
                return 0
            }
            
        }

        
        function goTo(elevator, maxfactor){
            var direction = decidedirection(elevator, maxfactor)
            //console.log(direction)
            var targetfloor = decidefloor(direction, elevator, maxfactor)
            elevator.goToFloor(targetfloor, true);   
        }
           
     

        // Whenever the elevator is idle (has no more queued destinations) ...
        elevators[0].on("idle", function() {
            elevators[0].goToFloor(0)
           
        });
        
        elevators[1].on("idle", function() {
            elevators[1].goToFloor(1)

        });
        
        elevators[2].on("idle", function() {
            elevators[2].goToFloor(2)

        });
        
        elevators[3].on("idle", function() {
            elevators[3].goToFloor(0)

        });
        

        elevators[0].on("stopped_at_floor", function() {
            goTo(elevators[0], elevators[0].loadFactor())

        });
        
        elevators[1].on("stopped_at_floor", function() {
            goTo(elevators[1], elevators[1].loadFactor())

        });
        
        elevators[2].on("stopped_at_floor", function() {
            goTo(elevators[2], 1)

        });
        
        elevators[3].on("stopped_at_floor", function() {
            goTo(elevators[3], 1)

        });
        
        elevators[0].on("floor_button_pressed", function() {
            goTo(elevators[0], elevators[0].loadFactor())

        });

        elevators[1].on("floor_button_pressed", function() {
            goTo(elevators[1], elevators[0].loadFactor())

        })

        elevators[2].on("floor_button_pressed", function() {
            goTo(elevators[2], 1)

        });
        
        elevators[3].on("floor_button_pressed", function() {
            goTo(elevators[3], 1)

        });                
                          
    },
    update: function(dt, elevators, floors) {
        // We normally don't need to do anything here
    }
}
